buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

repositories {
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
    }
    maven {
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
}


version = "1.12.2-0.5.1"
group = "cubex2.cs4"
archivesBaseName = "customstuff4"

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "1.12.2-14.23.1.2555"
    runDir = "run"
    mappings = "snapshot_20170624"
    makeObfSourceJar = false
}

dependencies {
    testCompile 'junit:junit:4.5'

    //nashorn sandbox, to secure our javascript execution.
    //updated sandbox
    compile files('delight-nashorn-sandbox-0.1.14-SNAPSHOT.jar')
    compile group: 'org.webjars.bower', name:"js-beautify",version: "1.6.12"

    // compile against the JEI API
    deobfCompile "mezz.jei:jei_${mc_version}:${jei_version}:api"
    // at runtime, use the full JEI jar
    runtime "mezz.jei:jei_${mc_version}:${jei_version}"
    //

    if ("${waila_version}".endsWith("${mc_version}"))
        compile "mcp.mobius.waila:Waila:${waila_version}:dev"
    else
        compileOnly "mcp.mobius.waila:Waila:${waila_version}:dev"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deleteExampleMod(type: Delete) {
    delete 'run/mods/examplemod'
}

task copyExampleModToRun(type: Copy) {
    from 'examplemod'
    into 'run/mods/examplemod'
}

copyExampleModToRun.dependsOn deleteExampleMod
